{"version":3,"sources":["scripts/views/guide/index.js","scripts/views/index.js","scripts/index.js","App.js","serviceWorker.js","index.js","utils/lazyload.js","utils/history.js"],"names":["timer","Guide","state","imgList","count","txt","e","stopPropagation","window","event","cancelBubble","history","push","clearInterval","setInterval","setState","console","log","className","autoplay","infinite","beforeChange","from","to","afterChange","index","startCount","this","map","item","key","style","display","width","height","src","alt","verticalAlign","onClick","toHome","Component","Main","Lazyload","Login","Details","Car","Search","ViewsIndex","Switch","Route","path","exact","render","Redirect","component","MainRouter","HashRouter","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","loadingComponent","loader","loading","Loadable","createHashHistory"],"mappings":"0TAOIA,EAAQ,KACSC,E,YACjB,aAAe,IAAD,8BACV,+CACKC,MAAQ,CACTC,QAAS,CACL,oEACA,oEACA,qEAEJC,MAAO,EACPC,IAAK,mBATC,E,oEAYPC,GACCA,GAAKA,EAAEC,gBACPD,EAAEC,kBAGFC,OAAOC,MAAMC,cAAe,EAGhCC,IAAQC,KAAK,SACbC,cAAcb,K,mCAEJ,IAAD,OACTA,EAAQc,aAAY,WACZ,EAAKZ,MAAME,MAAQ,IACnB,EAAKW,SAAS,CACVX,QAAS,EAAKF,MAAME,MACpBC,IAAI,gBAAD,OAAQ,EAAKH,MAAME,MAAnB,OAGPY,QAAQC,IAAI,QAGb,EAAKf,MAAME,MAAQ,IAClB,EAAKW,SAAS,CACVX,MAAO,IAEXS,cAAcb,GACdgB,QAAQC,IAAI,UAIjB,O,+BAGG,IAAD,OACL,OACI,yBAAKC,UAAU,SACX,uBACIC,UAAU,EACVC,UAAU,EACVC,aAAc,SAACC,EAAMC,GAAP,OAAcP,QAAQC,IAAR,qBAA0BK,EAA1B,eAAqCC,KACjEC,YAAa,SAAAC,GAAK,OAAa,GAATA,EAAW,EAAKC,aAAa,KAElDC,KAAKzB,MAAMC,QAAQyB,KAAI,SAACC,EAAMJ,GAC3B,OACI,uBACIK,IAAKL,EACLM,MAAO,CAAEC,QAAS,eAAgBC,MAAO,OAAQC,OAAQ,UAEzD,yBACIC,IAAKN,EACLO,IAAI,GACJL,MAAO,CAAEE,MAAO,OAAQC,OAAQ,QAASG,cAAe,SAGlD,GAATZ,GAAc,4BAAQP,UAAU,QAAQoB,QAAS,EAAKC,QAAxC,IAAmD,EAAKrC,MAAMG,e,GApE1EmC,a,QCF7BC,EAAMC,aAAS,kBAAI,kCAInBC,EAAOD,aAAS,kBAAI,uEACpBE,EAASF,aAAS,kBAAI,sEACtBG,EAAKH,aAAS,kBAAI,sEAClBI,EAAQJ,aAAS,kBAAI,sEAqBZK,E,iLAhBP,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,OAAS,kBAAM,kBAACC,EAAA,EAAD,CAAU9B,GAAG,cAClD,kBAAC0B,EAAA,EAAD,CAAOC,KAAK,QAAQI,UAAYb,IAChC,kBAACQ,EAAA,EAAD,CAAOC,KAAK,SAASI,UAAYrD,IACjC,kBAACgD,EAAA,EAAD,CAAOC,KAAK,SAASI,UAAYX,IACjC,kBAACM,EAAA,EAAD,CAAOC,KAAK,OAAOI,UAAYT,IAC/B,kBAACI,EAAA,EAAD,CAAOC,KAAK,UAAUI,UAAYR,IAClC,kBAACG,EAAA,EAAD,CAAOC,KAAM,gBAAgBI,UAAWV,IACxC,kBAACK,EAAA,EAAD,CAAOG,OAAQ,kBAAK,kBAACC,EAAA,EAAD,CAAU9B,GAAG,uB,GAXvBiB,aCVZe,EAAb,iLAEQ,OACG,kBAACC,EAAA,EAAD,KAGI,kBAAC,EAAD,WANf,GAAgChB,aCSlBiB,MARf,WACE,OACE,yBAAKvC,UAAU,OACX,kBAAC,EAAD,QCEYwC,QACW,cAA7BlD,OAAOmD,SAASC,UAEe,UAA7BpD,OAAOmD,SAASC,UAEhBpD,OAAOmD,SAASC,SAASC,MACvB,2D,OCTNC,IAASV,OAAO,kBAAC,EAAD,MAASW,SAASC,eAAe,SDwH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,gCEnInB,qCAMMC,EAAkB,WACpB,OACI,yCAKO,aAACC,GAAqC,IAA9BC,EAA6B,uDAAnBF,EAC7B,OAAOG,IAAS,CACZF,SACAC,c,gCChBR,sCACa9D,EAAS,IADtB,KAC0BgE,I","file":"static/js/main.231010ee.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./index.scss\"\r\nimport { history } from \"~/history.js\"\r\n// import Header from \"../../components/header\"\r\n\r\nimport { Button, WhiteSpace, WingBlank, Carousel } from \"antd-mobile\"\r\n\r\nvar timer = null;\r\nexport default class Guide extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            imgList: [\r\n                \"https://wx4.sinaimg.cn/mw690/6ffff2e2gy1g8rv5mc78wj20rk1e5e81.jpg\",\r\n                \"https://wx1.sinaimg.cn/mw690/6ffff2e2ly1g8o3zagptfj20rk1e51kx.jpg\",\r\n                \"https://wx3.sinaimg.cn/mw690/6ffff2e2ly1g94ao7um3qj20u01hckju.jpg\"\r\n            ],\r\n            count: 3,\r\n            txt: \"跳过 3s\"\r\n        }\r\n    }\r\n    toHome(e) {\r\n        if (e && e.stopPropagation) {\r\n            e.stopPropagation();\r\n        }\r\n        else {\r\n            window.event.cancelBubble = true;\r\n        }\r\n     \r\n        history.push(\"/main\")\r\n        clearInterval(timer);\r\n    };\r\n    startCount() {\r\n        timer = setInterval(() => {\r\n            if (this.state.count > 0) {\r\n                this.setState({\r\n                    count: --this.state.count,\r\n                    txt: `跳过 ${this.state.count}s`\r\n                })\r\n                \r\n                console.log(11111)  \r\n                      \r\n            } \r\n            if(this.state.count < 0){\r\n                this.setState({\r\n                    count: 3,\r\n                })\r\n                clearInterval(timer);\r\n                console.log(22222)\r\n            }\r\n            \r\n            \r\n        }, 1000);\r\n    }\r\n  \r\n    render() {\r\n        return (\r\n            <div className=\"guide\">\r\n                <Carousel\r\n                    autoplay={false}\r\n                    infinite={false}\r\n                    beforeChange={(from, to) => console.log(`slide from ${from} to ${to}`)}\r\n                    afterChange={index => index == 2?this.startCount():\"\"}\r\n                >\r\n                    {this.state.imgList.map((item, index) => {\r\n                        return (\r\n                            <a\r\n                                key={index}\r\n                                style={{ display: 'inline-block', width: '100%', height: \"100vh\" }}\r\n                            >\r\n                                <img\r\n                                    src={item}\r\n                                    alt=\"\"\r\n                                    style={{ width: '100%', height: \"100vh\", verticalAlign: 'top' }}\r\n\r\n                                />\r\n                                {index == 2 && <button className=\"g_btn\" onClick={this.toHome} > {this.state.txt}</button>}\r\n                                {/* {index == 2 && <span onClick={this.startCount()}></span>} */}\r\n                            </a>\r\n                        )\r\n                    })}\r\n                </Carousel>\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n  \r\n    \r\n}","import React, {Component} from \"react\";\r\nimport {Switch,Route,Redirect } from \"react-router-dom\";\r\nimport Guide from \"./guide\"\r\n//引入懒加载\r\nimport Lazyload from \"~/lazyload\"\r\n\r\nconst Main =Lazyload(()=>import(\"./main\"))\r\n\r\n// const Guide =Lazyload(()=>import(\"./guide\"))\r\n// const Search =Lazyload(()=>import(\"./search\"))\r\nconst Login =Lazyload(()=>import(\"./login\"))\r\nconst Details =Lazyload(()=>import(\"./details\"))\r\nconst Car =Lazyload(()=>import(\"./car\"))\r\nconst Search =Lazyload(()=>import(\"./search\"))\r\n\r\n\r\n class ViewsIndex extends Component {\r\n    render(){\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/\" exact render= {() =>(<Redirect to=\"/guide\" />) } />\r\n                <Route path=\"/main\" component={ Main } />\r\n                <Route path=\"/guide\" component={ Guide } />\r\n                <Route path=\"/login\" component={ Login } />\r\n                <Route path=\"/car\" component={ Car } />\r\n                <Route path=\"/search\" component={ Search } />\r\n                <Route path =\"/details/:iid\" component={Details}/>\r\n                <Route render={()=>(<Redirect to=\"/main/home\"/>)}/>\r\n            </Switch>\r\n          \r\n        )\r\n    }\r\n} \r\n\r\nexport default ViewsIndex","\r\nimport React ,{Component} from \"react\";\r\n import {HashRouter} from \"react-router-dom\"\r\n import ViewsIndex from \"./views\"\r\n \r\n\r\n export class MainRouter extends Component{\r\n     render(){\r\n         return(\r\n            <HashRouter\r\n            >\r\n\r\n                <ViewsIndex></ViewsIndex>\r\n            </HashRouter>\r\n         )\r\n     }\r\n }","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\n//引入主router 文件\nimport {MainRouter} from \"./scripts\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <MainRouter></MainRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// 全局的公共样式 \nimport \"./styles/index.scss\"; \n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// 路由懒加载 \r\n\r\nimport React from 'react';\r\nimport Loadable from 'react-loadable';\r\n\r\n//通用的过场组件 组件加载之前的动画 \r\nconst loadingComponent =()=>{\r\n    return (\r\n        <div>loading</div>\r\n    ) \r\n}\r\n\r\n//过场组件默认采用通用的，若传入了loading，则采用传入的过场组件\r\nexport default (loader,loading = loadingComponent)=>{\r\n    return Loadable({\r\n        loader,   // 需要懒加载的组件 \r\n        loading\r\n    });\r\n}","import {createHashHistory} from \"history\"\r\nexport const history =new createHashHistory()"],"sourceRoot":""}